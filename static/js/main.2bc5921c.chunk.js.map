{"version":3,"sources":["components/command/FormsControls/FormControls.module.css","redux/dialogs-reducer.js","hoc/AuthRedirect.js","API/api.js","redux/profile-reducer.js","Utils/Validators/Helper.js","redux/users-reducer,js.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","reportWebVitals.js","assets/images/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","redux/userSelector.js","components/command/Paginator.jsx","assets/images/avatar.png","components/Users/User.jsx","components/Users/Users.jsx","assets/images/gif.gif","components/command/preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Profileinfo/ProfileStatus/ProfileStatusHook.jsx","components/Profile/Profileinfo/ProfileStatus/ProfileStatus.jsx","assets/images/292-2924858_user-icon-business-man-flat-png-transparent-png.jpg","components/Profile/Profileinfo/ProfileDataForm.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/command/FormsControls/FormsControls.js","Utils/Validators/Validator.js"],"names":["module","exports","SEND_MESSAGE","initialState","messagesData","id","message","dialogsDt","name","sendMessageCreator","newMassageBody","type","dialogsReducer","state","action","body","mapStateToPropsForRedirect","isAuth","auth","AuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","response","data","followAPI","userId","post","unfollowAPI","delete","getProfile","authAPI","email","password","rememberMe","captcha","getStatusAPI","updateStatusAPI","status","put","savePhotoAPI","file","formData","FormData","append","saveProfileAPI","profile","securityAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","UPDATE_PHOTO","posts","likesCount","setStatus","getUserProfile","dispatch","a","profileReducer","newPost","newPostText","filter","p","postId","photos","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGLE_IS_FETCHING","TOGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","count","SET_USER_DATA","GET_CAPTCHA_URL","login","captchaUrl","setAuthUserData","payload","getCaptchaUrlSucces","getAuthUserData","avatar","getCaptchaUrl","url","authReducer","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","src","small","undefined","onClick","logout","WalletOutlined","HeaderContainer","Navbar","UserOutlined","WechatOutlined","UsergroupAddOutlined","PlayCircleOutlined","getUsersSuper","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Paginator","portionSize","pagesCount","Math","ceil","pages","i","push","useState","defaultCurrent","onChange","page","onPageChanged","total","User","user","unfollow","follow","userPhoto","disabled","some","Users","friends","friend","Preloader","preloader","UsersContainer","pageNumber","getUsersT","bind","totalCount","Post","style","opacity","MyPosts","memo","postsElements","MypostFormRedux","onSubmit","values","addPost","maxLenght10","maxLenghtCreator","reduxForm","handleSubmit","Field","validate","component","Textarea","placeholder","ProfileStatusHook","editMode","setEditMode","useEffect","e","currentTarget","value","onBlur","updateStatus","autoFocus","createField","validators","ProfileReduxForm","Form","Input","aboutMe","Object","keys","contacts","key","MyPostsContainer","addPostActionCreator","photo","img","ProfileData","isOwner","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","AliwangwangOutlined","color","contactTitle","contactValue","EditOutlined","Contact","Profileinfo","linkRef","createRef","large","UploadOutlined","fontSize","current","click","ref","target","files","length","savePhoto","alt","github","initialValues","saveProfile","Profile","ProfileContainer","match","params","LogUserId","history","getStatus","refrashProfile","prevProps","prevState","snapshot","alert","getState","stopSubmit","error","messages","Promise","reject","withRouter","ReduxLoginForm","PicRightOutlined","MessageOutlined","_error","DialogsContainer","lazy","App","handleError","reason","promise","initializeApp","addEventListener","removeEventListener","exact","path","render","Suspense","fallback","AppContainer","SocialJSApp","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","child","hasError","touched","classes","formControl","forgmControlEr","children","restProps","maxLenght"],"mappings":"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","file":"static/js/main.2bc5921c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControlEr\":\"FormControls_formControlEr__2Ps5U\",\"group\":\"FormControls_group__1qpeL\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    messagesData : [\r\n        {id: 1, message: 'Hi Pdis'},\r\n        {id: 2, message: 'Yoptope'},\r\n        {id: 1, message: 'What up?'},\r\n        {id: 2, message: 'н'},\r\n        {id: 1, message: 'В'},\r\n        {id: 2, message: 'Во'},\r\n        {id: 1, message: 'Ghbd'},\r\n        {id: 2, message: 'В'},\r\n        {id: 1, message: 'н'},\r\n        {id: 2, message: 'н'},\r\n        {id: 1, message: 'н'},\r\n        {id: 1, message: 'Привет'},\r\n        {id: 2, message: 'В'},\r\n        {id: 1, message: 'н'},\r\n        {id: 2, message: 'Лол'},\r\n        {id: 1, message: 'В'},\r\n    ],\r\n    dialogsDt: [\r\n        {id: 1, name: 'Hender'},\r\n        {id: 2, name: 'Yoptope'},\r\n        {id: 3, name: 'What up?'},\r\n        {id: 4, name: 'Это пост'},\r\n        {id: 5, name: 'Вотс апп??'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState,action) => {\r\n\r\n     switch (action.type) {\r\n         case SEND_MESSAGE:\r\n             const body = action.newMassageBody;\r\n             return {\r\n                 ...state,\r\n                 messagesData : [...state.messagesData, {id: 2, message: body}]\r\n             };\r\n         default :\r\n             return state;\r\n     }\r\n}\r\n\r\nexport const sendMessageCreator = (newMassageBody) => ({type: SEND_MESSAGE, newMassageBody})\r\n\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return (<Redirect to={\"/login\"} />);\r\n            return <Component {...this.props} />\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"dccbb11c-c4b9-49b6-95ab-d3da7525b4d1\"\r\n    }\r\n});\r\n\r\n \r\nexport const getUsers = (currentPage, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    }\r\nexport const followAPI = (userId) => {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\nexport const unfollowAPI = (userId) => {\r\n    return instance.delete(`follow/${userId}`)\r\n        .then(response => response.data);\r\n}\r\n\r\nexport const getProfile = (userId) => {\r\n    return instance.get(`profile/` + userId)\r\n}\r\n\r\nexport const authAPI = {\r\n    me  ()  {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login  (email, password, rememberMe = false, captcha = null)  {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout  ()  {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n\r\n}\r\n\r\nexport const getStatusAPI = (userId) => {\r\n    return instance.get(`profile/status/` + userId)\r\n}\r\n\r\nexport const updateStatusAPI = (status) => {\r\n    return instance.put(`profile/status/`, {\r\n        status: status\r\n    });\r\n}\r\n\r\nexport const savePhotoAPI = (file) => {\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    return instance.put(`profile/photo/`, formData, { headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n        }});\r\n}\r\n\r\nexport const saveProfileAPI = (profile) => {\r\n    return instance.put(`profile`, profile);\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl ()  {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n\r\n}","import {\r\n    getProfile,\r\n    getStatusAPI,\r\n    profileAPI,\r\n    savePhotoAPI,\r\n    saveProfileAPI,\r\n    updatePhoto,\r\n    updateStatusAPI\r\n} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst UPDATE_PHOTO = 'UPDATE_PHOTO';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi Ppis', likesCount: 12},\r\n        {id: 2, message: 'Yoptope', likesCount: 12},\r\n        {id: 3, message: 'What up?', likesCount: 12},\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case UPDATE_PHOTO: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: 'ADD-POST', newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) =>({type:UPDATE_PHOTO, photos})\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await getStatusAPI(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\r\n    try {\r\n        let response = await updateStatusAPI(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert('Саник')\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async(dispatch) => {\r\n    let response = await savePhotoAPI(file)\r\n    if(response.data.resultCode ===0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async(dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await saveProfileAPI(profile)\r\n    if(response.data.resultCode ===0) {\r\n        dispatch(getUserProfile(userId))\r\n     } else {\r\n         dispatch(stopSubmit( 'edit-profile', {error: response.data.messages[0]}))\r\n         return Promise.reject(response.data.messages[0]);\r\n     }\r\n}\r\n\r\n\r\nexport default profileReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})}","import {followAPI, getUsers, unfollowAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../Utils/Validators/Helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGLE_IS_FETCHING = 'TOGLE_IS_FETCHING';\r\nconst TOGLE_IS_FOLLOWING_PROGRESS = 'TOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 4,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsersT = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,followAPI.bind(followAPI),followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,unfollowAPI.bind(unfollowAPI),unfollowSuccess)\r\n    }\r\n};\r\nexport default usersReducer;","import {authAPI, securityAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: true\r\n            }\r\n            case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSucces = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL,\r\n    payload: {captchaUrl}\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email, avatar} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, avatar, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        }\r\n        else {\r\n            if (response.data.resultCode === 10){\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"миша бида\"\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        let response = await securityAPI.getCaptchaUrl();\r\n        const captchaUrl = response.data.url\r\n        dispatch(getCaptchaUrlSucces(captchaUrl));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\n\r\n\r\nlet initialState =  {\r\n    initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return  {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => ({type: SET_INITIALIZED});\r\n\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise =  dispatch(getAuthUserData());\r\n\r\n        promise.then( () => {\r\n            dispatch(setInitialized());\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer,js\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.575ee520.png\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../../assets/images/logo_black.png';\r\nimport userPhoto from \"../../assets/images/logo.png\";\r\nimport {WalletOutlined} from \"@ant-design/icons\"\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__login\">\r\n                <div className=\"header__login-block\">\r\n                    <div className=\"header__avatar\">{props.profile ?\r\n                        <img src={props.profile.photos.small}/> : undefined }\r\n                    </div>\r\n                    {props.isAuth ?\r\n                        <div>\r\n                            <div>\r\n                                <p>\r\n                                    {props.login}\r\n                                </p>\r\n                        </div>\r\n                        </div> :\r\n                        <div>\r\n                            <NavLink to={'/login'}>\r\n                                Login\r\n                            </NavLink>\r\n                        </div>\r\n                    }\r\n               </div>\r\n\r\n                {props.isAuth ?\r\n                <div className=\"header__logout\" onClick={props.logout}>\r\n                    <div>\r\n                        <p>Logout</p>\r\n                    </div>\r\n                    <div>\r\n                        <i>\r\n                            <WalletOutlined />\r\n                        </i>\r\n                    </div>\r\n                </div> : undefined }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\nimport profileReducer from \"../../redux/profile-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} profile={this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    avatar: state.auth.avatar,\r\n    profile: state.profilePage.profile\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout,profileReducer} ) (HeaderContainer);","import React from \"react\";\r\nimport './Navbar.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    MailOutlined,\r\n    NotificationOutlined,\r\n    PlayCircleOutlined,\r\n    UsergroupAddOutlined,\r\n    UserOutlined, WechatOutlined\r\n} from '@ant-design/icons'\r\nimport HeaderContainer from \"../Header/HeaderContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"nav__bar\">\r\n            <HeaderContainer/>\r\n            <nav>\r\n                <NavLink className=\"nav__link\" to='/profile'>\r\n                    <UserOutlined/>\r\n                    Profile\r\n                </NavLink>\r\n                <NavLink className=\"nav__link\" to='/dialogs'>\r\n                    <WechatOutlined />\r\n                    Message\r\n                </NavLink>\r\n                <NavLink className=\"nav__link\" to='/users'>\r\n                    <UsergroupAddOutlined/>\r\n                    Users\r\n                </NavLink>\r\n                <NavLink className=\"nav__link\" to='/users'>\r\n                    <PlayCircleOutlined />\r\n                    Music\r\n                </NavLink>\r\n            </nav>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuper = createSelector(getUsers, (users) => {\r\n    return  users;\r\n})\r\n\r\n\r\n export const getPageSize = (state) => {\r\n     return state.usersPage.pageSize;\r\n }\r\n export const getTotalUsersCount = (state) => {\r\n     return state.usersPage.totalUsersCount;\r\n }\r\n export const getCurrentPage = (state) => {\r\n     return state.usersPage.currentPage;\r\n }\r\n export const getIsFetching = (state) => {\r\n     return state.usersPage.isFetching;\r\n }\r\n export const getFollowingInProgress = (state) => {\r\n     return state.usersPage.followingInProgress;\r\n }","import React, {useState} from 'react';\r\nimport classes from \"../Users/Users.scss\";\r\nimport {getPageSize} from \"../../redux/userSelector\";\r\nimport  {Pagination} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nlet Paginator = (props, {portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount/props.pageSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionCount = (portionNumber -1) * portionSize + 1;\r\n    let rightPortionCount = portionNumber * portionSize;\r\n    const onChange = (page) => {\r\n        props.onPageChanged(page)\r\n    }\r\n\r\n    return (\r\n        // <div>\r\n        //     {portionNumber > 1 &&\r\n        //     <button onClick={ () => {setPortionNumber(portionNumber -1 )}}>PREV</button>\r\n        //\r\n        //     }\r\n        //\r\n        //     {pages\r\n        //         .filter(p => p >= leftPortionCount && p<=rightPortionCount)\r\n        //         .map(p => {\r\n        //         return <span className={props.currentPage === p && classes.selected}\r\n        //                      onClick={(e) => {\r\n        //                          props.onPageChanged(p)\r\n        //                      }}>{p}</span>\r\n        //     })}\r\n        //     {portionCount > portionNumber &&\r\n        //         <button onClick={ () => {setPortionNumber(portionNumber +1)}}>Next</button>\r\n        //\r\n        //     }\r\n        //\r\n        // </div>\r\n        <Pagination defaultCurrent={1} onChange={onChange} total={props.totalUsersCount} />\r\n    )\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/avatar.be063ef3.png\";","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/avatar.png\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className=\"users__list-item\">\r\n            <div className=\"users__list-avatar\">\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.small != null ? user.small : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"users__list-about\">\r\n                <div className=\"users__list-name\">{user.name}</div>\r\n                <div className=\"users__list-status\">{user.status || \"None Status\"}</div>\r\n            </div>\r\n            <div className=\"users__list-followed\">\r\n                {user.followed\r\n                    ? <button className=\"users__list-followed-btn\" disabled={followingInProgress.some(id => id == user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>Unfollow</button>\r\n                    : <button className=\"users__list-followed-btn\" disabled={followingInProgress.some(id => id == user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../command/Paginator\";\r\nimport User from \"./User\";\r\nimport userPhoto from \"../../assets/images/avatar.png\";\r\n\r\n\r\nlet Users = (props) => {\r\n    const friends = props.users.filter( u => u.followed )\r\n    debugger\r\n    return (\r\n        <div className=\"users\">\r\n            <div>\r\n                <div className=\"users__paginator\">\r\n                    <Paginator currentPage={props.currentPage} totalUsersCount={props.totalUsersCount}\r\n                               pageSize={props.pageSize} onPageChanged={props.onPageChanged}/>\r\n                </div>\r\n                <div className=\"users__list\">\r\n                    {props.users.map(u => <User user={u} unfollow={props.unfollow} follow={props.follow}\r\n                                                followingInProgress={props.followingInProgress} key={u.id}/>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"users__sidebar\">\r\n                <div className=\"users__friend\">\r\n                    <p className=\"users__friend-title\">My friend</p>\r\n                    {friends.map(friend =>\r\n                        <div className=\"friend\">\r\n                            <div className=\"friend__avatar\">\r\n                                <img src={friend.photos.small || userPhoto }/>\r\n                            </div>\r\n                            <div className=\"friend__info\">\r\n                                <p className=\"friend__name\">\r\n                                    {friend.name}\r\n                                </p>\r\n                                <p className=\"friend__last-seen\">\r\n                                    last seen: 22:45\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/gif.efd50a90.gif\";","import preloader from \"../../../assets/images/gif.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div><img src={preloader}/></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setCurrentPage,\r\n    toggleFollowingProgress, getUsersT, follow, unfollow,\r\n} from \"../../redux/users-reducer,js\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../command/preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersSuper\r\n} from \"../../redux/userSelector\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersT(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersT(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsersT,\r\n})(UsersContainer);\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"item\">\r\n                { props.message }\r\n            </div>\r\n            <div>\r\n                <span style={{opacity: 0.5}}>22:24</span>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, requiredFild} from \"../../../Utils/Validators/Validator\";\r\nimport {Textarea} from \"../../command/FormsControls/FormsControls\";\r\nimport \"./MyPosts.scss\"\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map((posts) =>\r\n            <Post message={posts.message} id={posts.id}/>);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">\r\n                <p className=\"post__title\">My posts</p>\r\n                <MypostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className=\"post__item\">\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLenght10 = maxLenghtCreator(20);\r\n\r\nlet MypostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field validate={[maxLenght10]}  component={Textarea} name=\"newPostText\" placeholder=\"Enter your post\" />\r\n            <button className=\"post__button\" >Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet MypostFormRedux = reduxForm({form:'addPost'})(MypostForm)\r\n\r\n\r\nexport default MyPosts;","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusHook  = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n            <>\r\n                {!editMode &&\r\n                <span onClick={activateMode}>{props.status || 'Nain!'}</span>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusHook;","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () =>{\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        debugger\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n         return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <span onClick={this.activateEditMode}>{this.props.status || 'Nain!'}</span>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","export default __webpack_public_path__ + \"static/media/292-2924858_user-icon-business-man-flat-png-transparent-png.32962620.jpg\";","import React from \"react\";\r\nimport {Form, Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../command/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nexport const createField = (placeholder,name,validators,component, props = {},text='') => {\r\n   return( <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />\r\n        <text />\r\n    </div>)\r\n}\r\n\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit}) => {\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <button>SAVE</button>\r\n            <div>\r\n                Full Name : {createField(\"Full name\", 'fullName',[], Input)}\r\n            </div>\r\n            <div>\r\n                {createField('','LookingForJob', [], Input, {type:\"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                {createField('','lookingForAJobDescription', [], Textarea, )}\r\n            </div>\r\n            <div>\r\n                About me: {profile.aboutMe}\r\n                {createField('','aboutMe', [], Textarea, )}\r\n            </div>\r\n\r\n            <div>\r\n                Contact :   {Object.keys(profile.contacts).map(key => {\r\n                return  <div>\r\n                    <b>{key}: {createField(key, 'contacts.'+ key,[], Input)}</b>\r\n                </div> })}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\nconst ProfileReduxForm = reduxForm({form: 'data'})(ProfileDataForm)\r\n\r\nexport default ProfileReduxForm;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState} from 'react';\r\nimport Preloader from \"../../command/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusHook from \"./ProfileStatus/ProfileStatusHook\";\r\nimport userPhoto from '../../../assets/images/292-2924858_user-icon-business-man-flat-png-transparent-png.jpg'\r\nimport Form from \"redux-form/lib/Form\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileReduxForm from \"./ProfileDataForm\";\r\nimport {saveProfileSave} from \"../../../redux/profile-reducer\";\r\nimport {AliwangwangOutlined, EditOutlined, UploadOutlined} from \"@ant-design/icons\"\r\nimport \"./Profile.scss\"\r\nimport MyPostsContainer from \"../Myposts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst photo = [\r\n    {img:\"https://thumbs.dreamstime.com/b/тропические-листья-листвые-леса-растения-кусты-коренной-природы-163670293.jpg\"},\r\n    {img:\"https://thumbs.dreamstime.com/b/тропические-листья-листвые-леса-растения-кусты-коренной-природы-163670293.jpg\"},\r\n    {img:\"https://thumbs.dreamstime.com/b/тропические-листья-листвые-леса-растения-кусты-коренной-природы-163670293.jpg\"},\r\n    {img:\"https://thumbs.dreamstime.com/b/тропические-листья-листвые-леса-растения-кусты-коренной-природы-163670293.jpg\"},\r\n\r\n]\r\n\r\n\r\n\r\n\r\nconst Profileinfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if(!props.profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n    const mainPhotoSelect = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n       props.saveProfile(formData).then(\r\n           () => {\r\n               setEditMode(false)\r\n           }\r\n       )\r\n    }\r\n    const linkRef = React.createRef();\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"profile\">\r\n            <div className=\"profile__header\">\r\n                <div className=\"profile__header-bg\">\r\n\r\n                </div>\r\n                <div className=\"profile__header-menu\">\r\n\r\n                </div>\r\n                <div className=\"profile__user\" >\r\n                    <div className=\"profile__avatar\">\r\n                        <img src={props.profile.photos.large || userPhoto}/>\r\n                        {props.isOwner && <i><UploadOutlined style={{fontSize:\"18px\"}} onClick={() => linkRef.current.click()} /></i>}\r\n                    </div>\r\n                    <div className=\"profile__name\">\r\n                        <p>{props.profile.fullName}</p>\r\n                    </div>\r\n                    <input ref={linkRef} type={'file'}  onChange={mainPhotoSelect}/>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__info-photos\">\r\n                    <div className=\"profile__info-photo\">\r\n                        {photo.map(url => { return <img src={url.img}  alt=\"my_photo\"/>})}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile__info-me\">\r\n                    <div className=\"profile__info-container\">\r\n                        <div className=\"profile__info-status\">\r\n                            <p>\r\n                                <ProfileStatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <p>{props.profile.contacts.github}</p>\r\n                        </div>\r\n                        {editMode ? <ProfileReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> :\r\n                            <ProfileData  profile={props.profile}\r\n                                          isOwner={props.isOwner} toEditMode={() => {setEditMode(true)}}\r\n                            />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile__info-post\">\r\n                    <MyPostsContainer  />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return (\r\n        <div className=\"profile__data\">\r\n            <div className=\"profile__data-me\">\r\n                <p>Full Name : {profile.fullName}</p>\r\n                <p>Loking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</p>\r\n                {profile.lookingForAJobDescription &&\r\n                <p>\r\n                    My dream job: {profile.lookingForAJobDescription}\r\n                </p>}\r\n                <p>\r\n                    About Me: {profile.aboutMe}\r\n                </p>\r\n                <div>\r\n                    <p><AliwangwangOutlined  style={{color: \"#8224E3\"}}/>Contact</p>  {Object.keys(profile.contacts).map(key => {\r\n                    return   <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>})}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                { isOwner && <i className=\"profile__button-edit\" ><EditOutlined style={{color: \"#8224E3\"}} onClick={toEditMode} /></i>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle,contactValue}) => {\r\n    return (\r\n        <div>\r\n            <span className=\"profile__contact-title\">{contactTitle}</span> : {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport  default Profileinfo;","import React from \"react\";\r\nimport MyPosts from \"./Myposts/MyPosts\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\nimport MyPostsContainer from \"./Myposts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redux/profile-reducer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div >\r\n            <Profileinfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} saveProfile={props.saveProfile} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refrashProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.LogUserId\r\n            if (!userId) {\r\n                this.props.history.push('login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refrashProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refrashProfile();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile  savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.userId} {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} saveProfile={this.props.saveProfile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    LogUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto,saveProfile}),\r\n    withRouter,\r\n    AuthRedirect,\r\n) (ProfileContainer)\r\n\r\n\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../command/FormsControls/FormsControls\";\r\nimport {maxLenghtCreator, requiredFild} from \"../../Utils/Validators/Validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {MessageOutlined, PicRightOutlined, UsergroupAddOutlined} from \"@ant-design/icons\"\r\nimport \"./Login.scss\"\r\n\r\n\r\n\r\n\r\n\r\nconst maxLenght10 = maxLenghtCreator(10);\r\n\r\nconst LoginForm = ({handleSubmit,error,captchaUrl}) => {\r\n    return ( <div className=\"login\">\r\n        <div className=\"login__block\">\r\n            <div className=\"login__block-left\">\r\n                <h3>\r\n                    Join to social network\r\n                </h3>\r\n                <p>\r\n                    Please enter you login and password\r\n                </p>\r\n                <div className=\"login__block-about\">\r\n                    <div className=\"login__block-ico\">\r\n                        <i>\r\n                            <UsergroupAddOutlined  style={{fontSize :\"30px\",color:\"#fff\"}}/>\r\n                        </i>\r\n                    </div>\r\n                    <div className=\"login__block-description\">\r\n                        <p>Add user</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login__block-about\">\r\n                    <div className=\"login__block-ico\">\r\n                        <i>\r\n                            <PicRightOutlined style={{fontSize :\"30px\",color:\"#fff\"}} />\r\n                        </i>\r\n                    </div>\r\n                    <div className=\"login__block-description\">\r\n                        <p>Create your Posts</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login__block-about\">\r\n                    <div className=\"login__block-ico\">\r\n                        <i>\r\n                            <MessageOutlined style={{fontSize :\"30px\",color:\"#fff\"}} />\r\n                        </i>\r\n                    </div>\r\n                    <div className=\"login__block-description\">\r\n                        <p>Send message</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"login__block-right\">\r\n                <div className=\"login__form\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"login__form-input\">\r\n                            <Field placeholder={'Email'} name={'email'}\r\n                                //validate={[requiredFild,maxLenght10]}\r\n                                   component={Input}/>\r\n                        </div>\r\n                        <div className=\"login__form-input\">\r\n                            <Field placeholder={'Password'} name={'password'} component={Input}/>\r\n                        </div>\r\n                        <div className=\"login__form-checkbox\">\r\n                            <Field type={'checkbox'} name={'rememberMe'} component={Input}/>\r\n                            <p>Remember</p>\r\n                        </div>\r\n                        { error && <div className=\"login__form-error\">\r\n                            {error}\r\n                        </div>}\r\n                        {captchaUrl && <img src={captchaUrl}/>}\r\n                        {captchaUrl && <Field placeholder={'Symbols'} name={'captcha'} component={Input}/> }\r\n                        <div className=\"login__form-btn\">\r\n                            <button> Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm(\r\n    {\r\n        form: 'login'\r\n    }\r\n) (LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl:state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport  {BrowserRouter, HashRouter, Route, withRouter, Switch,Redirect,} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/command/preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\n\nclass App extends React.Component {\n    handleError = (reason, promise) => {\n        alert(promise);\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"Error\", this.handleError)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"Error\", this.handleError)\n    }\n\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <section className=\"wrapper\">\n                <Navbar/>\n                <div className=\"content\" >\n                    <Switch>\n                        <Route exact path='/'\n                               render={ () => <Redirect to={\"/profile\"} />} />\n                        <Route path='/dialogs' render={() => {\n                            return (<React.Suspense fallback={<div>Loading...</div>}>\n                                <DialogsContainer/>\n                            </React.Suspense>)}}\n                        />\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>} />\n                    </Switch>\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nlet SocialJSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SocialJSApp","import React from 'react';\nimport './index.css';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport SocialJSApp from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <SocialJSApp />\n    </React.StrictMode>,document.getElementById('root')\n)\n;\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.forgmControlEr : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>AAAAAAAAAA</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const  {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const  {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}","export const requiredFild = value => {\r\n    if (value ) return undefined;\r\n    return (\r\n        <div>Error</div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value && value.length > maxLenght )\r\n    return (\r\n        <div>${maxLenght}</div>\r\n    );\r\n    return undefined;\r\n\r\n}"],"sourceRoot":""}